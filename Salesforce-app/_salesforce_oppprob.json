{"paragraphs":[{"title":"Imports","text":"import io.skymind.zeppelin.utils._\nimport io.skymind.modelproviders.history.client.ModelHistoryClient\nimport io.skymind.modelproviders.history.model._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.api.storage.impl.RemoteUIStatsStorageRouter\nimport org.deeplearning4j.ui.stats.StatsListener\nimport org.datavec.api.transform._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.lossfunctions.LossFunctions._\nimport org.nd4j.linalg.factory.Nd4j\n\nimport org.apache.spark.api.java.JavaSparkContext;\n\nimport org.datavec.api.records.reader.impl.csv.CSVRecordReader;\nimport org.datavec.api.transform.TransformProcess;\nimport org.datavec.api.transform.condition.ConditionOp;\nimport org.datavec.api.transform.condition.column.CategoricalColumnCondition;\nimport org.datavec.api.transform.condition.column.DoubleColumnCondition;\nimport org.datavec.api.transform.filter.ConditionFilter;\nimport org.datavec.api.transform.schema.Schema;\nimport org.datavec.api.transform.transform.time.DeriveColumnsFromTimeTransform;\nimport org.datavec.api.util.ClassPathResource;\nimport org.datavec.api.writable.DoubleWritable;\nimport org.datavec.api.writable.Writable;\nimport org.datavec.spark.transform.SparkTransformExecutor;\nimport org.datavec.spark.transform.misc.StringToWritablesFunction;\nimport org.datavec.spark.transform.misc.WritablesToStringFunction;\nimport org.joda.time.DateTimeFieldType;\nimport org.joda.time.DateTimeZone;\n","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import io.skymind.zeppelin.utils._\nimport io.skymind.modelproviders.history.client.ModelHistoryClient\nimport io.skymind.modelproviders.history.model._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.api.storage.impl.RemoteUIStatsStorageRouter\nimport org.deeplearning4j.ui.stats.StatsListener\nimport org.datavec.api.transform._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.lossfunctions.LossFunctions._\nimport org.nd4j.linalg.factory.Nd4j\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.datavec.api.records.reader.impl.csv.CSVRecordReader\nimport org.datavec.api.transform.TransformProcess\nimport org.datavec.api.transform.condition.ConditionOp\nimport org.datavec.api.transform.condition.column.CategoricalColumnCondition\nimport org.datavec.api.transform.condition.column.DoubleColumnCondition\nimport org.datavec.api.transform.filter.ConditionFilter\nimport org.datavec.api.transform.schema.Schema\nimport org.datavec.api.transform.transform.time.DeriveColumnsFromTimeTransform\nimport org.datavec.api.util.ClassPathResource\nimport org.datavec.api.writable.DoubleWritable\nimport org.datavec.api.writable.Writable\nimport org.datavec.spark.transform.SparkTransformExecutor\nimport org.datavec.spark.transform.misc.StringToWritablesFunction\nimport org.datavec.spark.transform.misc.WritablesToStringFunction\nimport org.joda.time.DateTimeFieldType\nimport org.joda.time.DateTimeZone\n"}]},"apps":[],"jobName":"paragraph_1516135157418_562276809","id":"20180108-141144_1456868310","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:06:47+0000","dateFinished":"2018-01-16T21:06:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:260"},{"title":"Skil Context","text":"val skilContext = new SkilContext()\nval client = skilContext.client","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"skilContext: io.skymind.zeppelin.utils.SkilContext = io.skymind.zeppelin.utils.SkilContext@74d50d37\nclient: io.skymind.modelproviders.history.client.ModelHistoryClient = io.skymind.modelproviders.history.client.ModelHistoryClient@7848ee5c\n"}]},"apps":[],"jobName":"paragraph_1516135157418_562276809","id":"20180108-141144_1604519690","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:06:47+0000","dateFinished":"2018-01-16T21:06:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:261"},{"text":"%sh curl https://skilresources.blob.core.windows.net/demo/Opportunity.csv > /tmp/Opportunity.csv","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 14323  100 14323    0     0  33072      0 --:--:-- --:--:-- --:--:-- 33078\n"}]},"apps":[],"jobName":"paragraph_1516135157418_562276809","id":"20180108-143511_945965492","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:06:47+0000","dateFinished":"2018-01-16T21:06:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:262"},{"text":"val text = sc.textFile(\"/tmp/Opportunity.csv\")","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"text: org.apache.spark.rdd.RDD[String] = /tmp/Opportunity.csv MapPartitionsRDD[21] at textFile at <console>:178\n"}]},"apps":[],"jobName":"paragraph_1516135157418_562276809","id":"20180108-141344_2094685316","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:06:59+0000","dateFinished":"2018-01-16T21:06:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:263"},{"text":"println(\"%table \" + text.collect().mkString(\"\\n\").replace(\",\", \"\\t\"))","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"\"Id\"\t\"IsDeleted\"\t\"AccountId\"\t\"IsPrivate\"\t\"Name\"\t\"Description\"\t\"StageName\"\t\"StageSortOrder\"\t\"Amount\"\t\"Probability\"\t\"ExpectedRevenue\"\t\"TotalOpportunityQuantity\"\t\"CloseDate\"\t\"Type\"\t\"NextStep\"\t\"LeadSource\"\t\"IsClosed\"\t\"IsWon\"\t\"ForecastCategory\"\t\"ForecastCategoryName\"\t\"CampaignId\"\t\"HasOpportunityLineItem\"\t\"Pricebook2Id\"\t\"OwnerId\"\t\"CreatedDate\"\t\"CreatedById\"\t\"LastModifiedDate\"\t\"LastModifiedById\"\t\"SystemModstamp\"\t\"LastActivityDate\"\t\"LastStageChangeDate\"\t\"FiscalYear\"\t\"FiscalQuarter\"\t\"PrimaryPartnerAccountId\"\t\"ContractId\"\t\"DeliveryInstallationStatus__c\"\t\"TrackingNumber__c\"\t\"OrderNumber__c\"\t\"CurrentGenerators__c\"\t\"MainCompetitors__c\"\n\"0061N00000TbnwZQAR\"\t\"0\"\t\"0011N00001CFXsfQAH\"\t\"0\"\t\"Dickenson Mobile Generators\"\t\"\"\t\"Qualification\"\t\"2\"\t\"15000\"\t\"10\"\t\"1500\"\t\"\"\t\"2017-11-17 00:00:00\"\t\"New Customer\"\t\"\"\t\"Purchased List\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"Honda\"\n\"0061N00000TbnwaQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Office Portable Generators\"\t\"\"\t\"Negotiation/Review\"\t\"8\"\t\"125000\"\t\"90\"\t\"112500\"\t\"\"\t\"2017-11-05 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"Yamaha\"\t\"Yamaha\"\n\"0061N00000TbnwbQAB\"\t\"0\"\t\"0011N00001CFXsiQAH\"\t\"0\"\t\"Express Logistics Standby Generator\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"220000\"\t\"100\"\t\"220000\"\t\"\"\t\"2017-10-01 00:00:00\"\t\"New Customer\"\t\"\"\t\"Trade Show\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"\"\t\"830150301420\"\t\"653276\"\t\"Hawkpower\"\t\"Fujitsu\"\n\"0061N00000TbnwcQAB\"\t\"0\"\t\"0011N00001CFXsmQAH\"\t\"0\"\t\"GenePoint Standby Generator\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"85000\"\t\"100\"\t\"85000\"\t\"\"\t\"2017-11-08 00:00:00\"\t\"New Customer\"\t\"\"\t\"Partner\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Completed\"\t\"830150301420\"\t\"908676\"\t\"Honda\"\t\"Honda\"\n\"0061N00000TbnwdQAB\"\t\"0\"\t\"0011N00001CFXsgQAH\"\t\"0\"\t\"Grand Hotels Kitchen Generator\"\t\"\"\t\"Id. Decision Makers\"\t\"5\"\t\"15000\"\t\"60\"\t\"9000\"\t\"\"\t\"2017-09-26 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"John Deere\"\t\"Fujitsu\t Hawkpower\"\n\"0061N00000TbnweQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Refinery Generators\"\t\"\"\t\"Proposal/Price Quote\"\t\"7\"\t\"270000\"\t\"75\"\t\"202500\"\t\"\"\t\"2017-12-20 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"Caterpillar\"\t\"John Deere\"\n\"0061N00000TbnwfQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil SLA\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"120000\"\t\"100\"\t\"120000\"\t\"\"\t\"2017-12-27 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Partner\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"926363\"\t\"\"\t\"\"\n\"0061N00000TbnwgQAB\"\t\"0\"\t\"0011N00001CFXsgQAH\"\t\"0\"\t\"Grand Hotels Guest Portable Generators\"\t\"\"\t\"Value Proposition\"\t\"4\"\t\"250000\"\t\"50\"\t\"125000\"\t\"\"\t\"2018-01-04 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Employee Referral\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"Honda\"\t\"Honda\"\n\"0061N00000TbnwhQAB\"\t\"0\"\t\"0011N00001CFXscQAH\"\t\"0\"\t\"Edge Emergency Generator\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"75000\"\t\"100\"\t\"75000\"\t\"\"\t\"2018-01-04 00:00:00\"\t\"New Customer\"\t\"\"\t\"Word of mouth\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Completed\"\t\"830150301420\"\t\"731645\"\t\"John Deere\"\t\"John Deere\"\n\"0061N00000TbnwiQAB\"\t\"0\"\t\"0011N00001CFXsjQAH\"\t\"0\"\t\"University of AZ Portable Generators\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"50000\"\t\"100\"\t\"50000\"\t\"\"\t\"2017-10-05 00:00:00\"\t\"New Customer\"\t\"\"\t\"Public Relations\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Completed\"\t\"830150301360\"\t\"768934\"\t\"Mitsubishi\"\t\"Honda\t Mitsubishi\"\n\"0061N00000TbnwjQAB\"\t\"0\"\t\"0011N00001CFXseQAH\"\t\"0\"\t\"Pyramid Emergency Generators\"\t\"\"\t\"Prospecting\"\t\"1\"\t\"100000\"\t\"10\"\t\"10000\"\t\"\"\t\"2017-11-13 00:00:00\"\t\"\"\t\"\"\t\"Phone Inquiry\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\n\"0061N00000TbnwkQAB\"\t\"0\"\t\"0011N00001CFXsiQAH\"\t\"0\"\t\"Express Logistics Portable Truck Generators\"\t\"\"\t\"Value Proposition\"\t\"4\"\t\"80000\"\t\"50\"\t\"40000\"\t\"\"\t\"2017-09-29 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"Fujitsu\"\t\"Honda\"\n\"0061N00000TbnwlQAB\"\t\"0\"\t\"0011N00001CFXsmQAH\"\t\"0\"\t\"GenePoint Lab Generators\"\t\"\"\t\"Id. Decision Makers\"\t\"5\"\t\"60000\"\t\"60\"\t\"36000\"\t\"\"\t\"2017-12-29 00:00:00\"\t\"\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"Hawkpower\t Fujitsu\"\t\"Hawkpower\"\n\"0061N00000TbnwmQAB\"\t\"0\"\t\"0011N00001CFXsmQAH\"\t\"0\"\t\"GenePoint SLA\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"30000\"\t\"100\"\t\"30000\"\t\"\"\t\"2018-01-01 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Partner\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"546512\"\t\"\"\t\"\"\n\"0061N00000TbnwnQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Installations\"\t\"\"\t\"Negotiation/Review\"\t\"8\"\t\"270000\"\t\"90\"\t\"243000\"\t\"\"\t\"2017-11-01 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"\"\t\"\"\n\"0061N00000TbnwoQAB\"\t\"0\"\t\"0011N00001CFXscQAH\"\t\"0\"\t\"Edge Installation\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"50000\"\t\"100\"\t\"50000\"\t\"\"\t\"2017-10-26 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Word of mouth\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Completed\"\t\"\"\t\"835178\"\t\"\"\t\"\"\n\"0061N00000TbnwpQAB\"\t\"0\"\t\"0011N00001CFXscQAH\"\t\"0\"\t\"Edge SLA\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"60000\"\t\"100\"\t\"60000\"\t\"\"\t\"2017-09-21 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Word of mouth\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"847564\"\t\"\"\t\"\"\n\"0061N00000TbnwqQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Installations\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"270000\"\t\"100\"\t\"270000\"\t\"\"\t\"2017-10-31 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Partner\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"427609\"\t\"\"\t\"\"\n\"0061N00000TbnwrQAB\"\t\"0\"\t\"0011N00001CFXsgQAH\"\t\"0\"\t\"Grand Hotels Generator Installations\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"350000\"\t\"100\"\t\"350000\"\t\"\"\t\"2017-12-18 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Completed\"\t\"\"\t\"763546\"\t\"\"\t\"\"\n\"0061N00000TbnwsQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Refinery Generators\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"915000\"\t\"100\"\t\"915000\"\t\"\"\t\"2017-12-13 00:00:00\"\t\"New Customer\"\t\"\"\t\"Partner\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Completed\"\t\"830150301360\"\t\"744343\"\t\"John Deere\"\t\"John Deere\t Mitsubishi\t Hawkpower\"\n\"0061N00000TbnwtQAB\"\t\"0\"\t\"0011N00001CFXsjQAH\"\t\"0\"\t\"University of AZ Installations\"\t\"\"\t\"Proposal/Price Quote\"\t\"7\"\t\"100000\"\t\"75\"\t\"75000\"\t\"\"\t\"2017-10-02 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Employee Referral\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"\"\t\"\"\t\"\"\t\"\"\n\"0061N00000TbnwuQAB\"\t\"0\"\t\"0011N00001CFXsiQAH\"\t\"0\"\t\"Express Logistics SLA\"\t\"\"\t\"Perception Analysis\"\t\"6\"\t\"120000\"\t\"70\"\t\"84000\"\t\"\"\t\"2017-09-30 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"\"\t\"\"\t\"\"\n\"0061N00000TbnwvQAB\"\t\"0\"\t\"0011N00001CFXsjQAH\"\t\"0\"\t\"University of AZ SLA\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"90000\"\t\"100\"\t\"90000\"\t\"\"\t\"2017-10-09 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"Public Relations\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"654985\"\t\"\"\t\"\"\n\"0061N00000TbnwwQAB\"\t\"0\"\t\"0011N00001CFXsdQAH\"\t\"0\"\t\"Burlington Textiles Weaving Plant Generator\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"235000\"\t\"100\"\t\"235000\"\t\"\"\t\"2017-11-10 00:00:00\"\t\"New Customer\"\t\"\"\t\"Web\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Yet to begin\"\t\"830150301360\"\t\"645612\"\t\"John Deere\"\t\"John Deere\"\n\"0061N00000TbnwxQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Installations\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"235000\"\t\"100\"\t\"235000\"\t\"\"\t\"2017-11-12 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"554821\"\t\"\"\t\"\"\n\"0061N00000TbnwyQAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Emergency Generators\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"440000\"\t\"100\"\t\"440000\"\t\"\"\t\"2017-10-25 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"Completed\"\t\"830150301420\"\t\"847324\"\t\"Fujitsu\"\t\"Honda\t Mitsubishi\"\n\"0061N00000TbnwzQAB\"\t\"0\"\t\"0011N00001CFXsgQAH\"\t\"0\"\t\"Grand Hotels SLA\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"90000\"\t\"100\"\t\"90000\"\t\"\"\t\"2017-09-28 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"In progress\"\t\"\"\t\"254676\"\t\"\"\t\"\"\n\"0061N00000Tbnx0QAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Standby Generators\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"120000\"\t\"100\"\t\"120000\"\t\"\"\t\"2017-12-28 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"External Referral\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"\"\t\"830150301360\"\t\"525476\"\t\"John Deere\"\t\"John Deere\t Mitsubishi\t Hawkpower\"\n\"0061N00000Tbnx1QAB\"\t\"0\"\t\"0011N00001CFXsgQAH\"\t\"0\"\t\"Grand Hotels Emergency Generators\"\t\"\"\t\"Closed Won\"\t\"9\"\t\"210000\"\t\"100\"\t\"210000\"\t\"\"\t\"2017-12-16 00:00:00\"\t\"New Customer\"\t\"\"\t\"External Referral\"\t\"1\"\t\"1\"\t\"Closed\"\t\"Closed\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"Completed\"\t\"830150301360\"\t\"387624\"\t\"Fujitsu\"\t\"Caterpillar\"\n\"0061N00000Tbnx2QAB\"\t\"0\"\t\"0011N00001CFXshQAH\"\t\"0\"\t\"United Oil Plant Standby Generators\"\t\"\"\t\"Needs Analysis\"\t\"3\"\t\"675000\"\t\"20\"\t\"135000\"\t\"\"\t\"2017-11-29 00:00:00\"\t\"Existing Customer - Upgrade\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"1\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"Caterpillar\"\t\"Caterpillar\t Mitsubishi\t Hawkpower\"\n\"0061N00000Tbnx3QAB\"\t\"0\"\t\"0011N00001CFXscQAH\"\t\"0\"\t\"Edge Emergency Generator\"\t\"\"\t\"Id. Decision Makers\"\t\"5\"\t\"35000\"\t\"60\"\t\"21000\"\t\"\"\t\"2018-01-10 00:00:00\"\t\"Existing Customer - Replacement\"\t\"\"\t\"\"\t\"0\"\t\"0\"\t\"Pipeline\"\t\"Pipeline\"\t\"000000000000000AAA\"\t\"\"\t\"\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"0051N000005LA5jQAG\"\t\"2018-01-08 11:41:08\"\t\"\"\t\"\"\t\"2015\"\t\"2\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"\"\t\"John Deere\t Mitsubishi\t Hawkpower\"\n"}]},"apps":[],"jobName":"paragraph_1516135157419_561892060","id":"20180108-143430_1416407563","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:06:59+0000","dateFinished":"2018-01-16T21:07:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:264"},{"text":"print(text.take(1)(0))","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\"Id\",\"IsDeleted\",\"AccountId\",\"IsPrivate\",\"Name\",\"Description\",\"StageName\",\"StageSortOrder\",\"Amount\",\"Probability\",\"ExpectedRevenue\",\"TotalOpportunityQuantity\",\"CloseDate\",\"Type\",\"NextStep\",\"LeadSource\",\"IsClosed\",\"IsWon\",\"ForecastCategory\",\"ForecastCategoryName\",\"CampaignId\",\"HasOpportunityLineItem\",\"Pricebook2Id\",\"OwnerId\",\"CreatedDate\",\"CreatedById\",\"LastModifiedDate\",\"LastModifiedById\",\"SystemModstamp\",\"LastActivityDate\",\"LastStageChangeDate\",\"FiscalYear\",\"FiscalQuarter\",\"PrimaryPartnerAccountId\",\"ContractId\",\"DeliveryInstallationStatus__c\",\"TrackingNumber__c\",\"OrderNumber__c\",\"CurrentGenerators__c\",\"MainCompetitors__c\""}]},"apps":[],"jobName":"paragraph_1516135157420_559968316","id":"20180108-165843_1794544147","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:07:00+0000","dateFinished":"2018-01-16T21:07:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:265"},{"text":"import java.util.Arrays\n\nval schema = new Schema.Builder()\n    .addColumnsString(\"Id\", \"IsDeleted\", \"AccountId\", \"IsPrivate\", \"Name\", \"Description\", \"StageName\", \"StageSortOrder\")\n    .addColumnInteger(\"Amount\")\n    .addColumnCategorical(\"Probability\", Arrays.asList(\"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\", \"60\", \"65\", \"70\", \"75\", \"80\", \"85\", \"90\", \"95\", \"100\"))\n    .addColumnInteger(\"ExpectedRevenue\")\n    .addColumnsString(\"TotalOpportunityQuantity\", \"CloseDate\")\n    .addColumnCategorical(\"Type\", Arrays.asList(\"New Customer\",\"Existing Customer - Upgrade\",\"Existing Customer - Replacement\", \"\"))\n    .addColumnString(\"NextStep\")\n    .addColumnCategorical(\"LeadSource\", Arrays.asList(\"Web\", \"External Referral\", \"\", \"Employee Referral\", \"Trade Show\", \"Partner\", \"Purchased List\", \"Word of mouth\", \"Public Relations\", \"Phone Inquiry\"))\n    .addColumnCategorical(\"IsClosed\", Arrays.asList(\"0\", \"1\"))\n    .addColumnCategorical(\"IsWon\", Arrays.asList(\"0\", \"1\"))\n    .addColumnCategorical(\"ForecastCategory\", Arrays.asList(\"Pipeline\", \"Closed\"))\n    .addColumnCategorical(\"ForecastCategoryName\", Arrays.asList(\"Pipeline\", \"Closed\"))\n    .addColumnsString(\"CampaignId\", \"HasOpportunityLineItem\", \"Pricebook2Id\", \"OwnerId\", \"CreatedDate\", \"CreatedById\", \"LastModifiedDate\", \"LastModifiedById\", \"SystemModstamp\", \"LastActivityDate\", \"LastStageChangeDate\", \"FiscalYear\")\n    .addColumnCategorical(\"FiscalQuarter\", Arrays.asList(\"1\", \"2\"))\n    .addColumnsString(\"PrimaryPartnerAccountId\", \"ContractId\", \"DeliveryInstallationStatus__c\", \"TrackingNumber__c\", \"OrderNumber__c\")\n    .addColumnString(\"CurrentGenerators__c\")\n    .addColumnString(\"MainCompetitors__c\")\n    .build()\n    \nval tp = new TransformProcess.Builder(schema)\n            .removeColumns(\"Id\", \"IsDeleted\", \"AccountId\", \"IsPrivate\", \"Name\", \"Description\", \"StageName\", \"StageSortOrder\")\n            .removeColumns(\"TotalOpportunityQuantity\", \"CloseDate\")\n            .removeColumns(\"NextStep\")\n            .removeColumns(\"CampaignId\", \"HasOpportunityLineItem\", \"Pricebook2Id\", \"OwnerId\", \"CreatedDate\", \"CreatedById\", \"LastModifiedDate\", \"LastModifiedById\", \"SystemModstamp\", \"LastActivityDate\", \"LastStageChangeDate\", \"FiscalYear\")\n            .removeColumns(\"PrimaryPartnerAccountId\", \"ContractId\", \"DeliveryInstallationStatus__c\", \"TrackingNumber__c\", \"OrderNumber__c\")\n            .filter(new ConditionFilter(new CategoricalColumnCondition(\"IsClosed\", ConditionOp.Equal, \"1\")))\n            .removeColumns(\"IsClosed\", \"IsWon\", \"ForecastCategory\", \"ForecastCategoryName\", \"CurrentGenerators__c\", \"MainCompetitors__c\")\n            .build();\n           \nval jsc = JavaSparkContext.fromSparkContext(sc)\nval raw = jsc.textFile(\"/tmp/Opportunity.csv\")\nval text = raw.filter((line: String) => line != \"\"\"\"Id\",\"IsDeleted\",\"AccountId\",\"IsPrivate\",\"Name\",\"Description\",\"StageName\",\"StageSortOrder\",\"Amount\",\"Probability\",\"ExpectedRevenue\",\"TotalOpportunityQuantity\",\"CloseDate\",\"Type\",\"NextStep\",\"LeadSource\",\"IsClosed\",\"IsWon\",\"ForecastCategory\",\"ForecastCategoryName\",\"CampaignId\",\"HasOpportunityLineItem\",\"Pricebook2Id\",\"OwnerId\",\"CreatedDate\",\"CreatedById\",\"LastModifiedDate\",\"LastModifiedById\",\"SystemModstamp\",\"LastActivityDate\",\"LastStageChangeDate\",\"FiscalYear\",\"FiscalQuarter\",\"PrimaryPartnerAccountId\",\"ContractId\",\"DeliveryInstallationStatus__c\",\"TrackingNumber__c\",\"OrderNumber__c\",\"CurrentGenerators__c\",\"MainCompetitors__c\"\"\"\")\nval rr = new CSVRecordReader()\nval parsedInputData = text.toJavaRDD().map(new StringToWritablesFunction(rr))\nval processedData = SparkTransformExecutor.execute(parsedInputData, tp)\n","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import java.util.Arrays\nschema: org.datavec.api.transform.schema.Schema = \nSchema():\nidx   name                                 type           meta data\n0     \"Id\"                                 String         StringMetaData(name=\"Id\",)\n1     \"IsDeleted\"                          String         StringMetaData(name=\"IsDeleted\",)\n2     \"AccountId\"                          String         StringMetaData(name=\"AccountId\",)\n3     \"IsPrivate\"                          String         StringMetaData(name=\"IsPrivate\",)\n4     \"Name\"                               String         StringMetaData(name=\"Name\",)\n5     \"Description\"                        String         StringMetaData(name=\"Description\",)\n6     \"StageName\"                          String         StringMetaData(name=\"StageName\",)\n7     \"StageSortOrder\"            ...tp: org.datavec.api.transform.TransformProcess = \nTransformProcess(initialSchema=Schema():\nidx   name                                 type           meta data\n0     \"Id\"                                 String         StringMetaData(name=\"Id\",)\n1     \"IsDeleted\"                          String         StringMetaData(name=\"IsDeleted\",)\n2     \"AccountId\"                          String         StringMetaData(name=\"AccountId\",)\n3     \"IsPrivate\"                          String         StringMetaData(name=\"IsPrivate\",)\n4     \"Name\"                               String         StringMetaData(name=\"Name\",)\n5     \"Description\"                        String         StringMetaData(name=\"Description\",)\n6     \"StageName\"                          String         StringMetaData(name=\"StageName\",)\n7   ...jsc: org.apache.spark.api.java.JavaSparkContext = org.apache.spark.api.java.JavaSparkContext@59f51d0d\nraw: org.apache.spark.api.java.JavaRDD[String] = /tmp/Opportunity.csv MapPartitionsRDD[23] at textFile at <console>:181\ntext: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[24] at filter at <console>:183\nrr: org.datavec.api.records.reader.impl.csv.CSVRecordReader = org.datavec.api.records.reader.impl.csv.CSVRecordReader@530cfe54\nparsedInputData: org.apache.spark.api.java.JavaRDD[java.util.List[org.datavec.api.writable.Writable]] = MapPartitionsRDD[25] at map at <console>:187\nprocessedData: org.apache.spark.api.java.JavaRDD[java.util.List[org.datavec.api.writable.Writable]] = MapPartitionsRDD[32] at map at SparkTransformExecutor.java:196\n"}]},"apps":[],"jobName":"paragraph_1516135157420_559968316","id":"20180108-144904_2016030622","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:07:00+0000","dateFinished":"2018-01-16T21:07:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:266"},{"text":"import org.datavec.spark.transform.AnalyzeSpark\nimport org.datavec.api.transform.ui.HtmlAnalysis\nimport java.io.File\n\nval dataAnalysis = AnalyzeSpark.analyze(tp.getFinalSchema(), processedData, 10)\nHtmlAnalysis.createHtmlAnalysisFile(dataAnalysis, new File(\"/opt/skil/plugins/files/sf-analysis.html\"))","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.datavec.spark.transform.AnalyzeSpark\nimport org.datavec.api.transform.ui.HtmlAnalysis\nimport java.io.File\ndataAnalysis: org.datavec.api.transform.analysis.DataAnalysis = \nidx   name                   type           analysis\n0     \"Amount\"               Integer        IntegerAnalysis(min=15000,max=675000,mean=162692.3076923077,sampleStDev=178309.3681476965,sampleVariance=3.179423076923077E10,countZero=0,countNegative=0,countPositive=13,countMinValue=2,countMaxValue=1,count=13, quantiles=[0.001 -> 15000.0,0.01 -> 15000.0,0.1 -> 15000.0,0.5 -> 100000.0,0.9 -> 351000.00000000047,0.99 -> 675000.0,0.999 -> 675000.0])\n1     \"Probability\"          Categorical    CategoricalAnalysis(CategoryCounts={60=3, 90=2, 50=2, 75=2, 10=2, 70=1, 20=1})\n2     \"ExpectedRevenue\"      Integer        IntegerAnalysis(min=1500,max=243000,mean=84192.30769230769,sampleStDev=76710.6409561114,sampleVariance=5.884522435897..."}]},"apps":[],"jobName":"paragraph_1516135157420_559968316","id":"20180108-170254_625023875","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:07:00+0000","dateFinished":"2018-01-16T21:07:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:267"},{"text":"import org.datavec.api.transform.transform.normalize.Normalize\nimport org.deeplearning4j.spark.datavec.DataVecDataSetFunction\n\nval tp2 = new TransformProcess.Builder(tp.getFinalSchema())\n    .normalize(\"Amount\", Normalize.Standardize, dataAnalysis)\n    .categoricalToInteger(\"Probability\")\n    .normalize(\"ExpectedRevenue\", Normalize.Standardize, dataAnalysis)\n    .categoricalToOneHot(\"Type\")\n    .categoricalToOneHot(\"LeadSource\")\n    .categoricalToOneHot(\"FiscalQuarter\")\n    .build();\n    \nval normalizedTrainData = SparkTransformExecutor.execute(processedData, tp2)\nval trainSet =  normalizedTrainData.map(new DataVecDataSetFunction(1, 19, false)).collect();\n","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.datavec.api.transform.transform.normalize.Normalize\nimport org.deeplearning4j.spark.datavec.DataVecDataSetFunction\ntp2: org.datavec.api.transform.TransformProcess = \nTransformProcess(initialSchema=Schema():\nidx   name                   type           meta data\n0     \"Amount\"               Integer        IntegerMetaData(name=\"Amount\",)\n1     \"Probability\"          Categorical    CategoricalMetaData(name=\"Probability\",stateNames=[\"55\",\"45\",\"35\",\"25\",\"15\",\"100\",\"90\",\"80\",\"70\",\"60\",\"50\",\"40\",\"95\",\"30\",\"85\",\"20\",\"75\",\"10\",\"65\"])\n2     \"ExpectedRevenue\"      Integer        IntegerMetaData(name=\"ExpectedRevenue\",)\n3     \"Type\"                 Categorical    CategoricalMetaData(name=\"Type\",stateNames=[\"\",\"Existing Customer - Replacement\",\"New Customer\",\"Existing Customer - Upgrade\"])\n4     \"LeadSource\"           Categorical    CategoricalMetaData(name=\"LeadSource\",stateNames=[\"\",\"Phone Inquiry\",\"Purchased L...normalizedTrainData: org.apache.spark.api.java.JavaRDD[java.util.List[org.datavec.api.writable.Writable]] = MapPartitionsRDD[38] at map at SparkTransformExecutor.java:196\ntrainSet: java.util.List[org.nd4j.linalg.dataset.DataSet] = \n[===========INPUT===================\n[-0.83,  -1.08,  1.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  1.00,  0.00,  0.00,  0.00,  1.00,  0.00]\n=================OUTPUT==================\n[1.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00], ===========INPUT===================\n[-0.21,  0.37,  0.00,  1.00,  0.00,  0.00,  0.00,  0.00,  1.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  1.00,  0.00]\n=================OUTPUT==================\n[0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  1.00,  0.00,  0.00], ===========INPUT===================\n[-0.83,  -0.98,  0.0..."}]},"apps":[],"jobName":"paragraph_1516135157420_559968316","id":"20180108-172712_728437483","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:07:03+0000","dateFinished":"2018-01-16T21:07:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:268"},{"title":"How to interact with SKIL","text":"val inputNum = 18\nval outputNum = 19 // number of output classes\nval batchSize = 4 // batch size for each epoch\nval rngSeed = 123 // random number seed for reproducibility\nval numEpochs = 15 // number of epochs to perform\n\nimport org.deeplearning4j.datasets.iterator.ExistingDataSetIterator\n\nval trainData = new MultipleEpochsIterator(numEpochs, new ExistingDataSetIterator(trainSet))\n\nval conf: MultiLayerConfiguration = new NeuralNetConfiguration.Builder()\n    .seed(rngSeed)\n    .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)\n    .updater(new Nesterovs(0.006, 0.9))\n    .l2(1e-4)\n    .list()\n    .layer(0, new OutputLayer.Builder(LossFunction.NEGATIVELOGLIKELIHOOD)\n            .nIn(inputNum)\n            .nOut(outputNum)\n            .activation(Activation.SOFTMAX)\n            .weightInit(WeightInit.XAVIER)\n            .build())\n    .build()\n\nval model = new MultiLayerNetwork(conf)\nmodel.init()\n\nmodel.fit(trainData)\n\ntrainData.reset()\nval evaluation = model.evaluate(trainData)\n\nval modelId = skilContext.addModelToExperiment(z, model, tp2, \"SmartProb LR new\")\nval evalId = skilContext.addEvaluationToModel(z, modelId, evaluation, \"LR \" + numEpochs + \" epochs\")","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"inputNum: Int = 18\noutputNum: Int = 19\nbatchSize: Int = 4\nrngSeed: Int = 123\nnumEpochs: Int = 15\nimport org.deeplearning4j.datasets.iterator.ExistingDataSetIterator\ntrainData: org.deeplearning4j.datasets.iterator.MultipleEpochsIterator = org.deeplearning4j.datasets.iterator.MultipleEpochsIterator@28b7a70b\nconf: org.deeplearning4j.nn.conf.MultiLayerConfiguration = \n{\n  \"backprop\" : true,\n  \"backpropType\" : \"Standard\",\n  \"cacheMode\" : \"NONE\",\n  \"confs\" : [ {\n    \"cacheMode\" : \"NONE\",\n    \"epochCount\" : 0,\n    \"iterationCount\" : 0,\n    \"l1ByParam\" : { },\n    \"l2ByParam\" : { },\n    \"layer\" : {\n      \"output\" : {\n        \"activationFn\" : {\n          \"Softmax\" : { }\n        },\n        \"biasInit\" : 0.0,\n        \"biasUpdater\" : null,\n        \"constraints\" : null,\n        \"dist\" : null,\n        \"gradientNormalization\" : \"None\",\n        \"gradientNormalizationThreshold\" : 1.0,\n        \"hasBias\" : true,\n        \"idropout\" : null,\n        \"iupdater\" : {\n          \"@class\" : \"org.nd4j.linalg.learning.config.Nesterovs\",\n          \"learningRate\" : 0.006,\n          \"momentum\" : 0.9\n        },\n        \"l1...model: org.deeplearning4j.nn.multilayer.MultiLayerNetwork = org.deeplearning4j.nn.multilayer.MultiLayerNetwork@3e40249f\nevaluation: org.deeplearning4j.eval.Evaluation = \n\nExamples labeled as 0 classified by model as 0: 30 times\nExamples labeled as 2 classified by model as 2: 15 times\nExamples labeled as 8 classified by model as 8: 15 times\nExamples labeled as 8 classified by model as 13: 15 times\nExamples labeled as 10 classified by model as 10: 45 times\nExamples labeled as 12 classified by model as 8: 15 times\nExamples labeled as 13 classified by model as 13: 30 times\nExamples labeled as 16 classified by model as 16: 30 times\n\nWarning: 13 classes were never predicted by the model and were excluded from average precision\nClasses excluded from average precision: [1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 17, 18]\nWarning: 12 classes were never predicted by the model and were excluded from average recall\nClasses...modelId: String = 7fed657f-c0b6-446a-a75d-1e8d7c68863f\nevalId: String = 881d52e4-ba8a-4abd-9a2e-1012cc2cc9d6\n"}]},"apps":[],"jobName":"paragraph_1516135157420_559968316","id":"20180108-141144_1754818101","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:07:05+0000","dateFinished":"2018-01-16T21:07:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:269"},{"text":"val tp3 = new TransformProcess.Builder(tp.getFinalSchema())\n    .normalize(\"Amount\", Normalize.Standardize, dataAnalysis)\n    .removeColumns(\"Probability\")\n    .normalize(\"ExpectedRevenue\", Normalize.Standardize, dataAnalysis)\n    .categoricalToOneHot(\"Type\")\n    .categoricalToOneHot(\"LeadSource\")\n    .categoricalToOneHot(\"FiscalQuarter\")\n    .build();\n    \nval inferenceJson = tp3.toJson()\n\nimport java.nio.file.{Paths, Files}\nimport java.nio.charset.StandardCharsets\n\nFiles.write(Paths.get(\"/tmp/inferenceTP.json\"), inferenceJson.getBytes(StandardCharsets.UTF_8))\n","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tp3: org.datavec.api.transform.TransformProcess = \nTransformProcess(initialSchema=Schema():\nidx   name                   type           meta data\n0     \"Amount\"               Integer        IntegerMetaData(name=\"Amount\",)\n1     \"Probability\"          Categorical    CategoricalMetaData(name=\"Probability\",stateNames=[\"55\",\"45\",\"35\",\"25\",\"15\",\"100\",\"90\",\"80\",\"70\",\"60\",\"50\",\"40\",\"95\",\"30\",\"85\",\"20\",\"75\",\"10\",\"65\"])\n2     \"ExpectedRevenue\"      Integer        IntegerMetaData(name=\"ExpectedRevenue\",)\n3     \"Type\"                 Categorical    CategoricalMetaData(name=\"Type\",stateNames=[\"\",\"Existing Customer - Replacement\",\"New Customer\",\"Existing Customer - Upgrade\"])\n4     \"LeadSource\"           Categorical    CategoricalMetaData(name=\"LeadSource\",stateNames=[\"\",\"Phone Inquiry\",\"Purchased L...inferenceJson: String = \n{\n  \"initialSchema\" : {\n    \"Schema\" : {\n      \"columns\" : [ {\n        \"Integer\" : {\n          \"name\" : \"Amount\"\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"Probability\",\n          \"stateNames\" : [ \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\", \"60\", \"65\", \"70\", \"75\", \"80\", \"85\", \"90\", \"95\", \"100\" ]\n        }\n      }, {\n        \"Integer\" : {\n          \"name\" : \"ExpectedRevenue\"\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"Type\",\n          \"stateNames\" : [ \"New Customer\", \"Existing Customer - Upgrade\", \"Existing Customer - Replacement\", \"\" ]\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"LeadSource\",\n          \"stateNames\" : [ \"Web\", \"External Referral\", \"\", \"Employee Referral\", \"Trade ...import java.nio.file.{Paths, Files}\nimport java.nio.charset.StandardCharsets\nres49: java.nio.file.Path = /tmp/inferenceTP.json\n"}]},"apps":[],"jobName":"paragraph_1516135157420_559968316","id":"20180108-141144_1071124850","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:07:07+0000","dateFinished":"2018-01-16T21:07:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:270"},{"text":"%sh cat /tmp/inferenceTP.json","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"{\n  \"initialSchema\" : {\n    \"Schema\" : {\n      \"columns\" : [ {\n        \"Integer\" : {\n          \"name\" : \"Amount\"\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"Probability\",\n          \"stateNames\" : [ \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\", \"60\", \"65\", \"70\", \"75\", \"80\", \"85\", \"90\", \"95\", \"100\" ]\n        }\n      }, {\n        \"Integer\" : {\n          \"name\" : \"ExpectedRevenue\"\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"Type\",\n          \"stateNames\" : [ \"New Customer\", \"Existing Customer - Upgrade\", \"Existing Customer - Replacement\", \"\" ]\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"LeadSource\",\n          \"stateNames\" : [ \"Web\", \"External Referral\", \"\", \"Employee Referral\", \"Trade Show\", \"Partner\", \"Purchased List\", \"Word of mouth\", \"Public Relations\", \"Phone Inquiry\" ]\n        }\n      }, {\n        \"Categorical\" : {\n          \"name\" : \"FiscalQuarter\",\n          \"stateNames\" : [ \"1\", \"2\" ]\n        }\n      } ]\n    }\n  },\n  \"actionList\" : [ {\n    \"transform\" : {\n      \"StandardizeNormalizer\" : {\n        \"columnName\" : \"Amount\",\n        \"mean\" : 162692.3076923077,\n        \"stdev\" : 178309.36814769654\n      }\n    }\n  }, {\n    \"transform\" : {\n      \"RemoveColumnsTransform\" : {\n        \"columnsToRemove\" : [ \"Probability\" ],\n        \"leftOverColumns\" : [ \"Amount\", \"ExpectedRevenue\", \"Type\", \"LeadSource\", \"FiscalQuarter\" ]\n      }\n    }\n  }, {\n    \"transform\" : {\n      \"StandardizeNormalizer\" : {\n        \"columnName\" : \"ExpectedRevenue\",\n        \"mean\" : 84192.30769230769,\n        \"stdev\" : 76710.6409561114\n      }\n    }\n  }, {\n    \"transform\" : {\n      \"CategoricalToOneHotTransform\" : {\n        \"columnName\" : \"Type\"\n      }\n    }\n  }, {\n    \"transform\" : {\n      \"CategoricalToOneHotTransform\" : {\n        \"columnName\" : \"LeadSource\"\n      }\n    }\n  }, {\n    \"transform\" : {\n      \"CategoricalToOneHotTransform\" : {\n        \"columnName\" : \"FiscalQuarter\"\n      }\n    }\n  } ]\n}"}]},"apps":[],"jobName":"paragraph_1516135157421_559583567","id":"20180109-065207_445998814","dateCreated":"2018-01-16T20:39:17+0000","dateStarted":"2018-01-16T21:06:47+0000","dateFinished":"2018-01-16T21:06:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:271"},{"text":"%sh\n","user":"admin","dateUpdated":"2018-01-16T21:06:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1516135157421_559583567","id":"20180109-072451_458323437","dateCreated":"2018-01-16T20:39:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:272"}],"name":"/salesforce/oppprob","id":"2D4CENGDW","angularObjects":{"2D4JTFNQY:existing_process":[],"2D4JQFW97:existing_process":[],"2D65GYJGC:existing_process":[],"2D3MBFZEX:existing_process":[],"2D6DZX74G:existing_process":[],"2D517VQN2:existing_process":[],"2D4MASXG5:existing_process":[],"2D66AET88:existing_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}